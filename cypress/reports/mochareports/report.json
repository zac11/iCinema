{
  "stats": {
    "suites": 19,
    "tests": 114,
    "passes": 113,
    "pending": 0,
    "failures": 1,
    "start": "2020-04-21T16:06:56.679Z",
    "end": "2020-04-21T16:06:56.679Z",
    "duration": 104144,
    "testsRegistered": 114,
    "passPercent": 99.12280701754386,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e3b8ef69-9d1c-4650-a35c-1fc8293533c1",
      "title": "",
      "fullFile": "cypress/integration/examples/actions.spec.js",
      "file": "cypress/integration/examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 5976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email')\n    .type('fake@email.com').should('have.value', 'fake@email.com')\n    // .type() with special character sequences\n    .type('{leftarrow}{rightarrow}{uparrow}{downarrow}')\n    .type('{del}{selectall}{backspace}')\n    // .type() with key modifiers\n    .type('{alt}{option}') //these are equivalent\n    .type('{ctrl}{control}') //these are equivalent\n    .type('{meta}{command}{cmd}') //these are equivalent\n    .type('{shift}')\n    // Delay each keypress by 0.1 sec\n    .type('slow.typing@email.com', { delay: 100 })\n    .should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n    // Ignore error checking prior to type\n    // like whether the input is visible or disabled\n    .type('disabled error checking', { force: true })\n    .should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "ec439b0a-7504-4784-a968-ba081664460a",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus()\n    .should('have.class', 'focus')\n    .prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "1be4c477-8eef-4652-be34-3bbf595fc099",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur()\n    .should('have.class', 'error')\n    .prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "caa293ad-9430-43fc-bde4-70869ea1f099",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text')\n    .should('have.value', 'Clear this text')\n    .clear()\n    .should('have.value', '');",
              "err": {},
              "uuid": "cc59d6d9-4556-46ff-8217-8249165b30bd",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form')\n    .find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit()\n    .next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "e635d1a6-221a-4ab0-95d3-13dd76be0076",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2754,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas')\n    .click(80, 75) // click 80px on x coord and 75px on y coord\n    .click(170, 75)\n    .click(80, 165)\n    .click(100, 185)\n    .click(125, 190)\n    .click(150, 185)\n    .click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({ multiple: true });\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({ force: true });",
              "err": {},
              "uuid": "b93e3087-dc8f-471f-9595-b0f5c0fe9b3c",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "0384a661-4f4a-4c90-828f-e223621c6908",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "f4210bdb-1717-4513-9f19-704799b4017a",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]')\n    .check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]')\n    .check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]')\n    .check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]')\n    .check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]')\n    .check({ force: true }).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]')\n    .check('radio3', { force: true }).should('be.checked');",
              "err": {},
              "uuid": "98660066-899b-4f73-928c-503f92b562a6",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]')\n    .not('[disabled]')\n    .uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]')\n    .check('checkbox1')\n    .uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]')\n    .check(['checkbox1', 'checkbox3'])\n    .uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]')\n    .uncheck({ force: true }).should('not.be.checked');",
              "err": {},
              "uuid": "1dbbdcc0-c978-4000-af7c-c03273e9ad56",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select')\n    .should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple')\n    .select(['apples', 'oranges', 'bananas'])\n    // when getting multiple values, invoke \"val\" method first\n    .invoke('val')\n    .should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n    // can attach an assertion right away to the element\n    .should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple')\n    .select(['fr-apples', 'fr-oranges', 'fr-bananas'])\n    .invoke('val')\n    .should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple')\n    .invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "7493236a-7f12-4a26-afac-1c051302e374",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button')\n    .should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView()\n    .should('be.visible');\ncy.get('#scroll-vertical button')\n    .should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView()\n    .should('be.visible');\ncy.get('#scroll-both button')\n    .should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView()\n    .should('be.visible');",
              "err": {},
              "uuid": "553b0ceb-8c00-4a70-959e-f43572785c1f",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range')\n    .invoke('val', 25)\n    .trigger('change')\n    .get('input[type=range]').siblings('p')\n    .should('have.text', '25');",
              "err": {},
              "uuid": "7ebf23eb-4ae9-400c-8ba8-e1eb357d2a38",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollTo\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', { easing: 'linear' });\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', { duration: 2000 });",
              "err": {},
              "uuid": "68e22865-c758-4386-9e6a-11db8c3bd2e1",
              "parentUUID": "7fdab6d7-cbfc-4695-8558-56ec1e6d292e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec439b0a-7504-4784-a968-ba081664460a",
            "1be4c477-8eef-4652-be34-3bbf595fc099",
            "caa293ad-9430-43fc-bde4-70869ea1f099",
            "cc59d6d9-4556-46ff-8217-8249165b30bd",
            "e635d1a6-221a-4ab0-95d3-13dd76be0076",
            "b93e3087-dc8f-471f-9595-b0f5c0fe9b3c",
            "0384a661-4f4a-4c90-828f-e223621c6908",
            "f4210bdb-1717-4513-9f19-704799b4017a",
            "98660066-899b-4f73-928c-503f92b562a6",
            "1dbbdcc0-c978-4000-af7c-c03273e9ad56",
            "7493236a-7f12-4a26-afac-1c051302e374",
            "553b0ceb-8c00-4a70-959e-f43572785c1f",
            "7ebf23eb-4ae9-400c-8ba8-e1eb357d2a38",
            "68e22865-c758-4386-9e6a-11db8c3bd2e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7c661b2a-2457-4653-96de-d923c5a85420",
      "title": "",
      "fullFile": "cypress/integration/examples/aliasing.spec.js",
      "file": "cypress/integration/examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06bad2ad-e4c1-451e-8d51-57b9b57df824",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr')\n    .first().find('td').first()\n    .find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn')\n    .should('have.class', 'btn-success')\n    .and('contain', 'Changed');",
              "err": {},
              "uuid": "22b8cd8e-838c-4faf-945d-e21a04bdd79e",
              "parentUUID": "06bad2ad-e4c1-451e-8d51-57b9b57df824",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.server();\ncy.route('GET', 'comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('status').should('eq', 200);",
              "err": {},
              "uuid": "1397b931-7fa2-4eae-812d-c73de308b302",
              "parentUUID": "06bad2ad-e4c1-451e-8d51-57b9b57df824",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22b8cd8e-838c-4faf-945d-e21a04bdd79e",
            "1397b931-7fa2-4eae-812d-c73de308b302"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d89a70bc-e152-410e-a176-3d5b19c4a575",
      "title": "",
      "fullFile": "cypress/integration/examples/assertions.spec.js",
      "file": "cypress/integration/examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c603a710-eed6-4771-a283-6c89261e0038",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b2cacf1a-f4d3-49e2-8cbc-e6dae9a9c307",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 1128,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table')\n    .find('tbody tr:last')\n    .should('have.class', 'success')\n    .find('td')\n    .first()\n    // checking the text of the <td> element in various ways\n    .should('have.text', 'Column content')\n    .should('contain', 'Column content')\n    .should('have.html', 'Column content')\n    // chai-jquery uses \"is()\" to check if element matches selector\n    .should('match', 'td')\n    // to match text content against a regular expression\n    // first need to invoke jQuery method text()\n    // and then match using regular expression\n    .invoke('text')\n    .should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table')\n    .find('tbody tr:last')\n    // finds first <td> element with text content matching regular expression\n    .contains('td', /column content/i)\n    .should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "0c0a37c1-5786-47f7-9a29-a488306700de",
                  "parentUUID": "b2cacf1a-f4d3-49e2-8cbc-e6dae9a9c307",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 355,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link')\n    .should('have.class', 'active')\n    .and('have.attr', 'href')\n    .and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "51ce9410-5d09-4da4-b9bd-2f827bd91166",
                  "parentUUID": "b2cacf1a-f4d3-49e2-8cbc-e6dae9a9c307",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c0a37c1-5786-47f7-9a29-a488306700de",
                "51ce9410-5d09-4da4-b9bd-2f827bd91166"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1483,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f4af1af9-f470-4800-9743-7467e60263eb",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 501,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nvar o = { foo: 'bar' };\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({ foo: 'bar' });\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "71e9df95-0b0d-47e7-93d4-2cbb43c672c6",
                  "parentUUID": "f4af1af9-f470-4800-9743-7467e60263eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 537,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p')\n    .find('p')\n    .should(function ($p) {\n    // https://on.cypress.io/$\n    // return an array of texts from all of the p's\n    // @ts-ignore TS6133 unused variable\n    var texts = $p.map(function (i, el) { return Cypress.$(el).text(); });\n    // jquery map returns jquery object\n    // and .get() convert this to simple array\n    var paragraphs = texts.get();\n    // array should have length of 3\n    expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n    // use second argument to expect(...) to provide clear\n    // message with each assertion\n    expect(paragraphs, 'has expected text in each paragraph').to.deep.eq([\n        'Some text from first p',\n        'More text from second p',\n        'And even more text from third p',\n    ]);\n});",
                  "err": {},
                  "uuid": "2cbdfc54-5916-45ab-9956-12f417a71efd",
                  "parentUUID": "f4af1af9-f470-4800-9743-7467e60263eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 732,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header')\n    .find('div')\n    // .should(cb) callback function will be retried\n    .should(function ($div) {\n    expect($div).to.have.length(1);\n    var className = $div[0].className;\n    expect(className).to.match(/heading-/);\n})\n    // .then(cb) callback is not retried,\n    // it either passes or fails\n    .then(function ($div) {\n    expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "1080bf29-4820-43bd-b282-6b65bd020f5f",
                  "parentUUID": "f4af1af9-f470-4800-9743-7467e60263eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 642,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header')\n    .find('div')\n    .should(function ($div) {\n    if ($div.length !== 1) {\n        // you can throw your own errors\n        throw new Error('Did not find 1 element');\n    }\n    var className = $div[0].className;\n    if (!className.match(/heading-/)) {\n        throw new Error(\"Could not find class \\\"heading-\\\" in \" + className);\n    }\n});",
                  "err": {},
                  "uuid": "9e376848-47ff-4e62-9c9f-e84b1484c1a9",
                  "parentUUID": "f4af1af9-f470-4800-9743-7467e60263eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 354,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function (s) { return s.replace(/\\s/g, '').toLowerCase(); };\ncy.get('.two-elements')\n    .find('.first')\n    .then(function ($first) {\n    // save text from the first element\n    text = normalizeText($first.text());\n});\ncy.get('.two-elements')\n    .find('.second')\n    .should(function ($div) {\n    // we can massage text before comparing\n    var secondText = normalizeText($div.text());\n    expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "a8ea2525-785d-4a38-b384-3f9605af9ad7",
                  "parentUUID": "f4af1af9-f470-4800-9743-7467e60263eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 329,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n    name: 'Joe',\n    age: 20,\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "92c5adac-9f78-4a05-8c7c-ff5e75cbb3f9",
                  "parentUUID": "f4af1af9-f470-4800-9743-7467e60263eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71e9df95-0b0d-47e7-93d4-2cbb43c672c6",
                "2cbdfc54-5916-45ab-9956-12f417a71efd",
                "1080bf29-4820-43bd-b282-6b65bd020f5f",
                "9e376848-47ff-4e62-9c9f-e84b1484c1a9",
                "a8ea2525-785d-4a38-b384-3f9605af9ad7",
                "92c5adac-9f78-4a05-8c7c-ff5e75cbb3f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3095,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c3c3b79f-49ad-4011-8aa6-cb22019c6e00",
      "title": "",
      "fullFile": "cypress/integration/examples/connectors.spec.js",
      "file": "cypress/integration/examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99638121-fefb-4cee-a452-32e26417b0e1",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 1064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li')\n    .each(function ($el, index, $list) {\n    console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "cd503023-e9b8-4290-867d-2a08bb3323b5",
              "parentUUID": "99638121-fefb-4cee-a452-32e26417b0e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n    // calls the 'length' property yielding that value\n    .its('length')\n    .should('be.gt', 2);",
              "err": {},
              "uuid": "2c1f222f-cb21-4eb0-8f49-b2aaa0845cd1",
              "parentUUID": "99638121-fefb-4cee-a452-32e26417b0e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden')\n    // call the jquery method 'show' on the 'div.container'\n    .invoke('show')\n    .should('be.visible');",
              "err": {},
              "uuid": "4a929340-52fb-49d1-8f3e-d8293c2659e9",
              "parentUUID": "99638121-fefb-4cee-a452-32e26417b0e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n    expect(foo).to.eq('foo');\n    expect(bar).to.eq('bar');\n    expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "bbcf5000-178b-490c-aa88-c2ceecbb3a66",
              "parentUUID": "99638121-fefb-4cee-a452-32e26417b0e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8a9dfb90-5fdf-48a4-8ada-5d93e428d705",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 337,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li')\n    .then(function ($lis) {\n    expect($lis, '3 items').to.have.length(3);\n    expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n    expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n    expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "8487898f-9a2c-4177-aea4-cb9168e0f6a0",
                  "parentUUID": "8a9dfb90-5fdf-48a4-8ada-5d93e428d705",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 351,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1)\n    .then(function (num) {\n    expect(num).to.equal(1);\n    return 2;\n})\n    .then(function (num) {\n    expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "95be19ca-e929-4152-bb42-f492fbf6f053",
                  "parentUUID": "8a9dfb90-5fdf-48a4-8ada-5d93e428d705",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 329,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1)\n    .then(function (num) {\n    expect(num).to.equal(1);\n    // note that nothing is returned from this callback\n})\n    .then(function (num) {\n    // this callback receives the original unchanged value 1\n    expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "97be35d6-e332-42ca-8276-19416ea2ee0c",
                  "parentUUID": "8a9dfb90-5fdf-48a4-8ada-5d93e428d705",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 333,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1)\n    .then(function (num) {\n    expect(num).to.equal(1);\n    // note how we run a Cypress command\n    // the result yielded by this Cypress command\n    // will be passed to the second \".then\"\n    cy.wrap(2);\n})\n    .then(function (num) {\n    // this callback receives the value yielded by \"cy.wrap(2)\"\n    expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "2d6e6d69-152d-47fd-af1e-32ec270e16e4",
                  "parentUUID": "8a9dfb90-5fdf-48a4-8ada-5d93e428d705",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8487898f-9a2c-4177-aea4-cb9168e0f6a0",
                "95be19ca-e929-4152-bb42-f492fbf6f053",
                "97be35d6-e332-42ca-8276-19416ea2ee0c",
                "2d6e6d69-152d-47fd-af1e-32ec270e16e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1350,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "cd503023-e9b8-4290-867d-2a08bb3323b5",
            "2c1f222f-cb21-4eb0-8f49-b2aaa0845cd1",
            "4a929340-52fb-49d1-8f3e-d8293c2659e9",
            "bbcf5000-178b-490c-aa88-c2ceecbb3a66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a99beb8f-6c3a-493a-8bbb-fed19e105668",
      "title": "",
      "fullFile": "cypress/integration/examples/cookies.spec.js",
      "file": "cypress/integration/examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f2723b6-f208-4141-b7ef-48e274e0c654",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 1344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "a0d70355-026f-4d4e-8a86-4879f6618a85",
              "parentUUID": "7f2723b6-f208-4141-b7ef-48e274e0c654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n    // each cookie has these properties\n    expect(cookies[0]).to.have.property('name', 'token');\n    expect(cookies[0]).to.have.property('value', '123ABC');\n    expect(cookies[0]).to.have.property('httpOnly', false);\n    expect(cookies[0]).to.have.property('secure', false);\n    expect(cookies[0]).to.have.property('domain');\n    expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "d325e471-62af-4858-b4df-5f57527c2fc5",
              "parentUUID": "7f2723b6-f208-4141-b7ef-48e274e0c654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "36dd2d2d-4505-457e-8004-382f86fa6fcf",
              "parentUUID": "7f2723b6-f208-4141-b7ef-48e274e0c654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "e4937f92-be73-49f2-87b6-226ae46c2623",
              "parentUUID": "7f2723b6-f208-4141-b7ef-48e274e0c654",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "31f1d6bc-0fe8-4455-87b6-27903acbf321",
              "parentUUID": "7f2723b6-f208-4141-b7ef-48e274e0c654",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0d70355-026f-4d4e-8a86-4879f6618a85",
            "d325e471-62af-4858-b4df-5f57527c2fc5",
            "36dd2d2d-4505-457e-8004-382f86fa6fcf",
            "e4937f92-be73-49f2-87b6-226ae46c2623",
            "31f1d6bc-0fe8-4455-87b6-27903acbf321"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "519e467c-1303-4edd-a239-badafe5e6677",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee41d9a3-996f-4bd7-8f06-f5553639829d",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 1251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n    prevSubject: true,\n}, function (subject, method) {\n    // the previous subject is automatically received\n    // and the commands arguments are shifted\n    // allow us to change the console method used\n    method = method || 'log';\n    // log the subject to the console\n    // @ts-ignore TS7017\n    console[method]('The subject is', subject);\n    // whatever we return becomes the new subject\n    // we don't want to change the subject so\n    // we return whatever was passed in\n    return subject;\n});\n// @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {\n    // subject is still $button\n});",
              "err": {},
              "uuid": "3d31c868-c706-49e9-a833-0cf0aea4577b",
              "parentUUID": "ee41d9a3-996f-4bd7-8f06-f5553639829d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d31c868-c706-49e9-a833-0cf0aea4577b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "6d9d20e8-8f0f-40d6-9d3b-0f743bac069b",
              "parentUUID": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok');\n// preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "58895d8b-5777-42ea-b56b-1b2e5864af88",
              "parentUUID": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n    whitelist: 'session_id',\n});",
              "err": {},
              "uuid": "46ac7dd1-dab3-4ded-9ebc-805b49adbbf9",
              "parentUUID": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d9d20e8-8f0f-40d6-9d3b-0f743bac069b",
            "58895d8b-5777-42ea-b56b-1b2e5864af88",
            "46ac7dd1-dab3-4ded-9ebc-805b49adbbf9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "91f10dd2-3d79-49cf-9948-f1a9cf362d15",
          "title": "Cypress.Server",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".defaults() - change default config of server",
              "fullTitle": "Cypress.Server .defaults() - change default config of server",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Server.defaults({\n    delay: 0,\n    force404: false,\n});",
              "err": {},
              "uuid": "d2509cc5-d092-48f5-932b-5ec9f057b73c",
              "parentUUID": "91f10dd2-3d79-49cf-9948-f1a9cf362d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2509cc5-d092-48f5-932b-5ec9f057b73c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 347,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97fac968-f666-4a49-9d32-a20344d283cb",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "901d237a-400e-4ad1-8dbc-222bce6506f8",
              "parentUUID": "97fac968-f666-4a49-9d32-a20344d283cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "901d237a-400e-4ad1-8dbc-222bce6506f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "484b509e-03ee-4663-b404-7142eb91460d",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 742,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (baseUrl, reporter, ...) } to have property 'baseUrl' of null, but got 'http://localhost:3000/'",
                "estack": "AssertionError: expected { Object (baseUrl, reporter, ...) } to have property 'baseUrl' of null, but got 'http://localhost:3000/'\n    at Context.<anonymous> (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/cypress_api.spec.js-325:92:34)",
                "diff": null
              },
              "uuid": "b4dc50e9-3a77-4218-b6d4-b781d3caef08",
              "parentUUID": "484b509e-03ee-4663-b404-7142eb91460d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b4dc50e9-3a77-4218-b6d4-b781d3caef08"
          ],
          "pending": [],
          "skipped": [],
          "duration": 742,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8836355d-7a31-4f24-86ce-7e0fae009e95",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "a5938e40-4cd6-4549-b9d5-352bf616fc2b",
              "parentUUID": "8836355d-7a31-4f24-86ce-7e0fae009e95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5938e40-4cd6-4549-b9d5-352bf616fc2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 355,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b4c7f6b-c2ad-4ed3-a8bb-80a701f44bc2",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n    host: 'veronica.dev.local',\n    api_server: 'http://localhost:8888/v1/',\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "3b64cf35-48f0-480d-8101-6570ceacaae8",
              "parentUUID": "6b4c7f6b-c2ad-4ed3-a8bb-80a701f44bc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b64cf35-48f0-480d-8101-6570ceacaae8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 508,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "101ed8da-1921-457a-9da8-e24744f900d4",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "de73cf96-edcd-4e69-a008-1c1e8765a9bf",
              "parentUUID": "101ed8da-1921-457a-9da8-e24744f900d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de73cf96-edcd-4e69-a008-1c1e8765a9bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c1968c6-2df1-46d5-a30d-d08e153c9891",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "9ea87f27-f61d-41a2-a42d-f1778391c8d6",
              "parentUUID": "5c1968c6-2df1-46d5-a30d-d08e153c9891",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ea87f27-f61d-41a2-a42d-f1778391c8d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1017a511-86da-4dae-be6f-257649a01fdf",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "549e63a6-46b9-40c6-9213-f9dee128f440",
              "parentUUID": "1017a511-86da-4dae-be6f-257649a01fdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "549e63a6-46b9-40c6-9213-f9dee128f440"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "385148f7-236f-4522-9e8a-760f0c03efb1",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "7cad9885-41dd-42fb-b0f3-88b0f4e371c6",
              "parentUUID": "385148f7-236f-4522-9e8a-760f0c03efb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cad9885-41dd-42fb-b0f3-88b0f4e371c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9bd48b6b-9340-4e49-8965-cef3cdc764dc",
      "title": "",
      "fullFile": "cypress/integration/examples/files.spec.js",
      "file": "cypress/integration/examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c1d1024-5316-436f-8e6b-c53b5d7b1cf7",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 1531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\ncy.server();\ncy.fixture('example.json').as('comment');\n// when application makes an Ajax request matching \"GET comments/*\"\n// Cypress will intercept it and reply with object\n// from the \"comment\" alias\ncy.route('GET', 'comments/*', '@comment').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody')\n    .should('have.property', 'name')\n    .and('include', 'Using fixtures to represent data');\n// you can also just write the fixture in the route\ncy.route('GET', 'comments/*', 'fixture:example.json').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody')\n    .should('have.property', 'name')\n    .and('include', 'Using fixtures to represent data');\n// or write fx to represent fixture\n// by default it assumes it's .json\ncy.route('GET', 'comments/*', 'fx:example').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('responseBody')\n    .should('have.property', 'name')\n    .and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "b384a87f-2eab-47bf-8e8c-f86831264122",
              "parentUUID": "3c1d1024-5316-436f-8e6b-c53b5d7b1cf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context')\n    .to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require')\n    .should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "ea637623-339a-4262-93a6-5fc39ff7c542",
              "parentUUID": "3c1d1024-5316-436f-8e6b-c53b5d7b1cf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n    expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "567ae0b0-8e21-444c-bde1-32f4ed67d61d",
              "parentUUID": "3c1d1024-5316-436f-8e6b-c53b5d7b1cf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 1321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users')\n    .then(function (response) {\n    cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n    expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n    id: 8739,\n    name: 'Jane',\n    email: 'jane@example.com',\n});\ncy.fixture('profile').should(function (profile) {\n    expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "c837204d-17cf-4299-8eb8-0fd8736550c2",
              "parentUUID": "3c1d1024-5316-436f-8e6b-c53b5d7b1cf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b384a87f-2eab-47bf-8e8c-f86831264122",
            "ea637623-339a-4262-93a6-5fc39ff7c542",
            "567ae0b0-8e21-444c-bde1-32f4ed67d61d",
            "c837204d-17cf-4299-8eb8-0fd8736550c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cd840068-3728-4e59-82ea-9ad478abc22b",
      "title": "",
      "fullFile": "cypress/integration/examples/local_storage.spec.js",
      "file": "cypress/integration/examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f96c7a34-b052-47db-90d4-9c87975768d6",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 1571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n    expect(localStorage.getItem('prop1')).to.eq('red');\n    expect(localStorage.getItem('prop2')).to.eq('blue');\n    expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n    expect(ls.getItem('prop1')).to.be.null;\n    expect(ls.getItem('prop2')).to.be.null;\n    expect(ls.getItem('prop3')).to.be.null;\n});\n// Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n    expect(localStorage.getItem('prop1')).to.eq('red');\n    expect(localStorage.getItem('prop2')).to.eq('blue');\n    expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n    expect(ls.getItem('prop1')).to.be.null;\n    expect(ls.getItem('prop2')).to.eq('blue');\n    expect(ls.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n    expect(localStorage.getItem('prop1')).to.eq('red');\n    expect(localStorage.getItem('prop2')).to.eq('blue');\n    expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n    expect(ls.getItem('prop1')).to.be.null;\n    expect(ls.getItem('prop2')).to.be.null;\n    expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "fd66ebf2-2e2c-4f23-820c-f939b54169c3",
              "parentUUID": "f96c7a34-b052-47db-90d4-9c87975768d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd66ebf2-2e2c-4f23-820c-f939b54169c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1571,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5f3a2e63-0e55-48c1-94a5-6b7a886c5862",
      "title": "",
      "fullFile": "cypress/integration/examples/location.spec.js",
      "file": "cypress/integration/examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8d8b9f90-8162-458e-810c-419725ad11ba",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "e4c8d943-9836-4922-859a-7c195442573f",
              "parentUUID": "8d8b9f90-8162-458e-810c-419725ad11ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n    expect(location.hash).to.be.empty;\n    expect(location.href).to.eq('https://example.cypress.io/commands/location');\n    expect(location.host).to.eq('example.cypress.io');\n    expect(location.hostname).to.eq('example.cypress.io');\n    expect(location.origin).to.eq('https://example.cypress.io');\n    expect(location.pathname).to.eq('/commands/location');\n    expect(location.port).to.eq('');\n    expect(location.protocol).to.eq('https:');\n    expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "d66a02d9-38a8-4369-b421-0ce2e508416f",
              "parentUUID": "8d8b9f90-8162-458e-810c-419725ad11ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "42f5881c-c794-4335-96c5-295ffcd04855",
              "parentUUID": "8d8b9f90-8162-458e-810c-419725ad11ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4c8d943-9836-4922-859a-7c195442573f",
            "d66a02d9-38a8-4369-b421-0ce2e508416f",
            "42f5881c-c794-4335-96c5-295ffcd04855"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1742,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "992f5c0a-d162-4fa8-bf20-0ce057bfa817",
      "title": "",
      "fullFile": "cypress/integration/examples/misc.spec.js",
      "file": "cypress/integration/examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a9ce4b7-be13-4d25-9316-6d1d18189c01",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n    // ends the current chain and yields null\n    cy.contains('Cheryl').click().end();\n    // queries the entire table again\n    cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "0cf13153-b1bd-4d14-8d91-7bea9e7b1fb6",
              "parentUUID": "2a9ce4b7-be13-4d25-9316-6d1d18189c01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \" + Cypress.platform + \" architecture \" + Cypress.arch);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n    return;\n}\ncy.exec('echo Jane Lane')\n    .its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n    cy.exec('print cypress.json')\n        .its('stderr').should('be.empty');\n}\nelse {\n    cy.exec('cat cypress.json')\n        .its('stderr').should('be.empty');\n    cy.exec('pwd')\n        .its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "abed1307-cc71-4a24-afed-ed313108aa61",
              "parentUUID": "2a9ce4b7-be13-4d25-9316-6d1d18189c01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "ffcead8a-3a88-4733-b0aa-0a54b88491a7",
              "parentUUID": "2a9ce4b7-be13-4d25-9316-6d1d18189c01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({ foo: 'bar' })\n    .should('have.property', 'foo')\n    .and('include', 'bar');",
              "err": {},
              "uuid": "0ae0363f-20d9-4cb1-88aa-96a40a574428",
              "parentUUID": "2a9ce4b7-be13-4d25-9316-6d1d18189c01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9344014a-ab6c-4f73-8fd4-d1e1fe1f03fa",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 2274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "32c97aa5-74d7-4760-9ea9-84e20923f46d",
                  "parentUUID": "9344014a-ab6c-4f73-8fd4-d1e1fe1f03fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 382,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n    blackout: ['.foo'],\n    capture: 'viewport',\n    clip: { x: 0, y: 0, width: 200, height: 200 },\n    scale: false,\n    disableTimersAndAnimations: true,\n    screenshotOnRunFailure: true,\n    beforeScreenshot: function () { },\n    afterScreenshot: function () { },\n});",
                  "err": {},
                  "uuid": "ab3b0d11-d326-4a4a-9dad-7a6e393df2ad",
                  "parentUUID": "9344014a-ab6c-4f73-8fd4-d1e1fe1f03fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32c97aa5-74d7-4760-9ea9-84e20923f46d",
                "ab3b0d11-d326-4a4a-9dad-7a6e393df2ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2656,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "0cf13153-b1bd-4d14-8d91-7bea9e7b1fb6",
            "abed1307-cc71-4a24-afed-ed313108aa61",
            "ffcead8a-3a88-4733-b0aa-0a54b88491a7",
            "0ae0363f-20d9-4cb1-88aa-96a40a574428"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3038,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b81964c1-b1b4-425e-81cf-0b97dfe67d0d",
      "title": "",
      "fullFile": "cypress/integration/examples/navigation.spec.js",
      "file": "cypress/integration/examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b0b4d95-48bb-4a9f-be51-b16a0a3f3ae3",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 2661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "3e35098e-f870-491a-a95b-76b5a92c8b63",
              "parentUUID": "6b0b4d95-48bb-4a9f-be51-b16a0a3f3ae3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 1331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "798593cb-37d6-4e50-9609-bccf9d0ff5b7",
              "parentUUID": "6b0b4d95-48bb-4a9f-be51-b16a0a3f3ae3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n    timeout: 50000,\n    onBeforeLoad: function (contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be.true;\n    },\n    onLoad: function (contentWindow) {\n        // contentWindow is the remote page's window object\n        expect(typeof contentWindow === 'object').to.be.true;\n    },\n});",
              "err": {},
              "uuid": "25895e48-e33b-476c-be7f-d794cb5dede9",
              "parentUUID": "6b0b4d95-48bb-4a9f-be51-b16a0a3f3ae3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e35098e-f870-491a-a95b-76b5a92c8b63",
            "798593cb-37d6-4e50-9609-bccf9d0ff5b7",
            "25895e48-e33b-476c-be7f-d794cb5dede9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "589e4118-fbae-4c1d-960f-bea0abaaffeb",
      "title": "",
      "fullFile": "cypress/integration/examples/network_requests.spec.js",
      "file": "cypress/integration/examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.server() - control behavior of network requests and responses",
              "fullTitle": "Network Requests cy.server() - control behavior of network requests and responses",
              "timedOut": null,
              "duration": 1033,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/server\ncy.server().should(function (server) {\n    // the default options on server\n    // you can override any of these options\n    expect(server.delay).to.eq(0);\n    expect(server.method).to.eq('GET');\n    expect(server.status).to.eq(200);\n    expect(server.headers).to.be.null;\n    expect(server.response).to.be.null;\n    expect(server.onRequest).to.be.undefined;\n    expect(server.onResponse).to.be.undefined;\n    expect(server.onAbort).to.be.undefined;\n    // These options control the server behavior\n    // affecting all requests\n    // pass false to disable existing route stubs\n    expect(server.enable).to.be.true;\n    // forces requests that don't match your routes to 404\n    expect(server.force404).to.be.false;\n    // whitelists requests from ever being logged or stubbed\n    expect(server.whitelist).to.be.a('function');\n});\ncy.server({\n    method: 'POST',\n    delay: 1000,\n    status: 422,\n    response: {},\n});\n// any route commands will now inherit the above options\n// from the server. anything we pass specifically\n// to route will override the defaults though.",
              "err": {},
              "uuid": "06e151bf-d6f2-4d6d-ba37-dc73d731a0e3",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments')\n    .should(function (response) {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.have.length(500);\n    expect(response).to.have.property('headers');\n    expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "9fe6a7cf-95cb-487c-b91f-4b90171a0c73",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 1381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments')\n    .then(function (response) {\n    // https://on.cypress.io/assertions\n    expect(response).property('status').to.equal(200);\n    expect(response).property('body').to.have.length(500);\n    expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "ade6d0f1-0476-4d2d-89eb-a130fa57f902",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 889,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n    url: 'https://jsonplaceholder.cypress.io/comments',\n    qs: {\n        postId: 1,\n        id: 3,\n    },\n})\n    .its('body')\n    .should('be.an', 'array')\n    .and('have.length', 1)\n    .its('0') // yields first element of the array\n    .should('contain', {\n    postId: 1,\n    id: 3,\n});",
              "err": {},
              "uuid": "d7e5a05d-6a9a-4495-bd66-201064cbe912",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1')\n    .its('body') // yields the response object\n    .its('0') // yields the first element of the returned list\n    // the above two commands its('body').its('0')\n    // can be written as its('body.0')\n    // if you do not care about TypeScript checks\n    .then(function (user) {\n    expect(user).property('id').to.be.a('number');\n    // make a new post on behalf of the user\n    cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.',\n    });\n})\n    // note that the value here is the returned value of the 2nd request\n    // which is the new post object\n    .then(function (response) {\n    expect(response).property('status').to.equal(201); // new entity created\n    expect(response).property('body').to.contain({\n        id: 101,\n        title: 'Cypress Test Runner',\n    });\n    // we don't know the user id here - since it was in above closure\n    // so in this test just confirm that the property is there\n    expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "6fd9dbcb-253e-490c-8716-f5e7a5518fd1",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 1608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1')\n    .its('body').its('0') // yields the first element of the returned list\n    .as('user') // saves the object in the test context\n    .then(function () {\n    // NOTE 👀\n    //  By the time this callback runs the \"as('user')\" command\n    //  has saved the user object in the test context.\n    //  To access the test context we need to use\n    //  the \"function () { ... }\" callback form,\n    //  otherwise \"this\" points at a wrong or undefined object!\n    cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n        userId: this.user.id,\n        title: 'Cypress Test Runner',\n        body: 'Fast, easy and reliable testing for anything that runs in a browser.',\n    })\n        .its('body').as('post'); // save the new post from the response\n})\n    .then(function () {\n    // When this callback runs, both \"cy.request\" API commands have finished\n    // and the test context has \"user\" and \"post\" objects set.\n    // Let's verify them.\n    expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "3da5149d-c161-4cc6-b52a-3af5749e869e",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.route() - route responses to matching requests",
              "fullTitle": "Network Requests cy.route() - route responses to matching requests",
              "timedOut": null,
              "duration": 2327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/route\nvar message = 'whoa, this comment does not exist';\ncy.server();\n// Listen to GET to comments/1\ncy.route('GET', 'comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('status').should('eq', 200);\n// Listen to POST to comments\ncy.route('POST', '/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (xhr) {\n    expect(xhr.requestBody).to.include('email');\n    expect(xhr.requestHeaders).to.have.property('Content-Type');\n    expect(xhr.responseBody).to.have.property('name', 'Using POST in cy.route()');\n});\n// Stub a response to PUT comments/ ****\ncy.route({\n    method: 'PUT',\n    url: 'comments/*',\n    status: 404,\n    response: { error: message },\n    delay: 500,\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "82f9ce0c-64ea-4e2d-9a86-6ed105c86f4c",
              "parentUUID": "eb86856b-a7d8-4973-95e8-886c6f5ef449",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06e151bf-d6f2-4d6d-ba37-dc73d731a0e3",
            "9fe6a7cf-95cb-487c-b91f-4b90171a0c73",
            "ade6d0f1-0476-4d2d-89eb-a130fa57f902",
            "d7e5a05d-6a9a-4495-bd66-201064cbe912",
            "6fd9dbcb-253e-490c-8716-f5e7a5518fd1",
            "3da5149d-c161-4cc6-b52a-3af5749e869e",
            "82f9ce0c-64ea-4e2d-9a86-6ed105c86f4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1928c46c-f1c3-4ec4-992b-845e65036c18",
      "title": "",
      "fullFile": "cypress/integration/examples/querying.spec.js",
      "file": "cypress/integration/examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2f420e7-e903-4320-b45c-1c4206a63153",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]')\n    .invoke('attr', 'data-test-id')\n    .should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]')\n    .invoke('css', 'position')\n    .should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]')\n    .should('have.attr', 'data-test-id', 'test-example')\n    .and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "c44b1dc9-9e2e-4bf2-87ca-d636be0a313c",
              "parentUUID": "c2f420e7-e903-4320-b45c-1c4206a63153",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list')\n    .contains('bananas')\n    .should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list')\n    .contains(/^b\\w+/)\n    .should('have.class', 'third');\ncy.get('.query-list')\n    .contains('apples')\n    .should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying')\n    .contains('ul', 'oranges')\n    .should('have.class', 'query-list');\ncy.get('.query-button')\n    .contains('Save Form')\n    .should('have.class', 'btn');",
              "err": {},
              "uuid": "76cdb683-c76b-4eb1-a06e-01cde04e15a4",
              "parentUUID": "c2f420e7-e903-4320-b45c-1c4206a63153",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n    cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n    cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "365b695d-9619-4a69-bd9e-6cf51b4f8af2",
              "parentUUID": "c2f420e7-e903-4320-b45c-1c4206a63153",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n    // In this within, the root is now the ul DOM element\n    cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "ac7b43c4-6b2b-4435-839a-70027f549395",
              "parentUUID": "c2f420e7-e903-4320-b45c-1c4206a63153",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 978,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n    // Worst - too generic, no context\n    cy.get('button').click();\n    // Bad. Coupled to styling. Highly subject to change.\n    cy.get('.btn.btn-large').click();\n    // Average. Coupled to the `name` attribute which has HTML semantics.\n    cy.get('[name=submission]').click();\n    // Better. But still coupled to styling or JS event listeners.\n    cy.get('#main').click();\n    // Slightly better. Uses an ID but also ensures the element\n    // has an ARIA role attribute\n    cy.get('#main[role=button]').click();\n    // Much better. But still coupled to text content that may change.\n    cy.contains('Submit').click();\n    // Best. Insulated from all changes.\n    cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "5ba0c155-c7d4-43af-9d0a-1305e8c162d8",
              "parentUUID": "c2f420e7-e903-4320-b45c-1c4206a63153",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c44b1dc9-9e2e-4bf2-87ca-d636be0a313c",
            "76cdb683-c76b-4eb1-a06e-01cde04e15a4",
            "365b695d-9619-4a69-bd9e-6cf51b4f8af2",
            "ac7b43c4-6b2b-4435-839a-70027f549395",
            "5ba0c155-c7d4-43af-9d0a-1305e8c162d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "224c7686-fb3c-440f-8f6a-4cbd9f2ec4dd",
      "title": "",
      "fullFile": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86c7fdde-b20c-4831-a12e-0ae46643b92a",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 1000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n    foo: function () { },\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "177b9827-f671-47b6-b436-87a01b96c64c",
              "parentUUID": "86c7fdde-b20c-4831-a12e-0ae46643b92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n    /**\n     * Prints the argument passed\n     * @param x {any}\n    */\n    foo: function (x) {\n        console.log('obj.foo called with', x);\n    },\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n    obj.foo('first');\n}, 500);\nsetTimeout(function () {\n    obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "48122bc3-0180-4920-89b4-dff2b3761063",
              "parentUUID": "86c7fdde-b20c-4831-a12e-0ae46643b92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n    /**\n     * prints both arguments to the console\n     * @param a {string}\n     * @param b {string}\n    */\n    foo: function (a, b) {\n        console.log('a', a, 'b', b);\n    },\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "ce55bb8c-5456-43dd-aa13-5d6e156682eb",
              "parentUUID": "86c7fdde-b20c-4831-a12e-0ae46643b92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click()\n    .should('have.text', '1489449600');",
              "err": {},
              "uuid": "aeec46a8-cab3-46c6-a701-d7aba45e289a",
              "parentUUID": "86c7fdde-b20c-4831-a12e-0ae46643b92a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click()\n    .should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click()\n    .should('have.text', '1489449610');",
              "err": {},
              "uuid": "a7f555dd-e165-42bf-979e-2686176067c4",
              "parentUUID": "86c7fdde-b20c-4831-a12e-0ae46643b92a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "177b9827-f671-47b6-b436-87a01b96c64c",
            "48122bc3-0180-4920-89b4-dff2b3761063",
            "ce55bb8c-5456-43dd-aa13-5d6e156682eb",
            "aeec46a8-cab3-46c6-a701-d7aba45e289a",
            "a7f555dd-e165-42bf-979e-2686176067c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4960,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "61fcdc94-261f-435a-a518-c1b7eaa44f29",
      "title": "",
      "fullFile": "cypress/integration/examples/traversal.spec.js",
      "file": "cypress/integration/examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 1171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb')\n    .children('.active')\n    .should('contain', 'Data');",
              "err": {},
              "uuid": "51312fcf-78be-429e-b128-c8f99bb65360",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge')\n    .closest('ul')\n    .should('have.class', 'list-group');",
              "err": {},
              "uuid": "c2a59977-ca7a-46c3-8475-5c859e898018",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li')\n    .eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "3291ffbb-acbe-4be8-80cd-0672cdebd513",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li')\n    .filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "8c495838-2b00-4b4f-8294-d4f22b20feac",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination')\n    .find('li').find('a')\n    .should('have.length', 7);",
              "err": {},
              "uuid": "95068789-6592-4d0b-ae00-545d560c43c5",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td')\n    .first().should('contain', '1');",
              "err": {},
              "uuid": "24136c90-9625-48f8-9399-790b71416e21",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn')\n    .last().should('contain', 'Submit');",
              "err": {},
              "uuid": "06dd930b-cb06-4957-924a-37d6aaa2c04e",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul')\n    .contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "59e4f019-f0ec-46c5-a8a6-3ba83faf90a5",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all')\n    .contains('oranges')\n    .nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "401ba654-c090-4b9f-8a30-852901e42615",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies')\n    .nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "7bc912ad-73a7-4a9f-aa46-967578767b0b",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn')\n    .not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "6214da57-945e-4bed-ab7a-7b25195220df",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark')\n    .parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "06469b5c-23b5-4186-ae50-1ca9544f4aa0",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite')\n    .parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "689ec9ff-ddd0-49a4-a5eb-bdb4eda369a2",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav')\n    .find('.active')\n    .parentsUntil('.clothes-nav')\n    .should('have.length', 2);",
              "err": {},
              "uuid": "e76e86a2-b6c4-4d26-9985-6c4ab19a9ede",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active')\n    .prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "d3ad0601-f4d0-40d3-ab3f-d9d653f00e8a",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevAll\ncy.get('.fruits-list').find('.third')\n    .prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "fe7abb3c-ce57-4c78-a962-8c366e7426e9",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevUntil\ncy.get('.foods-list').find('#nuts')\n    .prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "8cfcde56-caed-4d7b-8bc7-98a9d8fdfb1b",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active')\n    .siblings().should('have.length', 2);",
              "err": {},
              "uuid": "28256b97-dcd8-4769-a74f-969b35518fa2",
              "parentUUID": "c5afd116-7366-4a6e-b19e-e4c60da3d4e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51312fcf-78be-429e-b128-c8f99bb65360",
            "c2a59977-ca7a-46c3-8475-5c859e898018",
            "3291ffbb-acbe-4be8-80cd-0672cdebd513",
            "8c495838-2b00-4b4f-8294-d4f22b20feac",
            "95068789-6592-4d0b-ae00-545d560c43c5",
            "24136c90-9625-48f8-9399-790b71416e21",
            "06dd930b-cb06-4957-924a-37d6aaa2c04e",
            "59e4f019-f0ec-46c5-a8a6-3ba83faf90a5",
            "401ba654-c090-4b9f-8a30-852901e42615",
            "7bc912ad-73a7-4a9f-aa46-967578767b0b",
            "6214da57-945e-4bed-ab7a-7b25195220df",
            "06469b5c-23b5-4186-ae50-1ca9544f4aa0",
            "689ec9ff-ddd0-49a4-a5eb-bdb4eda369a2",
            "e76e86a2-b6c4-4d26-9985-6c4ab19a9ede",
            "d3ad0601-f4d0-40d3-ab3f-d9d653f00e8a",
            "fe7abb3c-ce57-4c78-a962-8c366e7426e9",
            "8cfcde56-caed-4d7b-8bc7-98a9d8fdfb1b",
            "28256b97-dcd8-4769-a74f-969b35518fa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9271,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "65336bb8-da0e-41f1-bdd1-e42596fc63d1",
      "title": "",
      "fullFile": "cypress/integration/examples/utilities.spec.js",
      "file": "cypress/integration/examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users')\n    .then(function (response) {\n    var ids = Cypress._.chain(response.body).map('id').take(3).value();\n    expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "70de5d68-aac0-4379-b187-f3b2a1e372ab",
              "parentUUID": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li)\n    .should('not.have.class', 'active')\n    .click()\n    .should('have.class', 'active');",
              "err": {},
              "uuid": "39e894b6-8c3b-4aa4-8c42-a6bc7ba6cda1",
              "parentUUID": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n    // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n    // get the dataUrl string for the javascript-logo\n    return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous')\n        .then(function (dataUrl) {\n        // create an <img> element and set its src to the dataUrl\n        var img = Cypress.$('<img />', { src: dataUrl });\n        // need to explicitly return cy here since we are initially returning\n        // the Cypress.Blob.imgSrcToDataURL promise to our test\n        // append the image\n        $div.append(img);\n        cy.get('.utility-blob img').click()\n            .should('have.attr', 'src', dataUrl);\n    });\n});",
              "err": {},
              "uuid": "3cb068a4-08a8-4295-ab6c-2824fb4537cd",
              "parentUUID": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n    matchBase: true,\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n    matchBase: true,\n});\nexpect(matching, 'comments').to.be.false;\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n    matchBase: true,\n});\nexpect(matching, 'comments').to.be.true;\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n    matchBase: false,\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "4e33b5d8-cf47-4a30-a254-4e052453b6c1",
              "parentUUID": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.moment() - format or parse dates using a moment method",
              "fullTitle": "Utilities Cypress.moment() - format or parse dates using a moment method",
              "timedOut": null,
              "duration": 399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/moment\nvar time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\nexpect(time).to.be.a('string');\ncy.get('.utility-moment').contains('3:38 PM')\n    .should('have.class', 'badge');\n// the time in the element should be between 3pm and 5pm\nvar start = Cypress.moment('3:00 PM', 'LT');\nvar end = Cypress.moment('5:00 PM', 'LT');\ncy.get('.utility-moment .badge')\n    .should(function ($el) {\n    // parse American time like \"3:38 PM\"\n    var m = Cypress.moment($el.text().trim(), 'LT');\n    // display hours + minutes + AM|PM\n    var f = 'h:mm A';\n    expect(m.isBetween(start, end), m.format(f) + \" should be between \" + start.format(f) + \" and \" + end.format(f)).to.be.true;\n});",
              "err": {},
              "uuid": "1011ac3c-0378-4fb8-a4c9-8ff256e5dc9a",
              "parentUUID": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n    // return a promise that resolves after 1 second\n    // @ts-ignore TS2351 (new Cypress.Promise)\n    return new Cypress.Promise(function (resolve, reject) {\n        setTimeout(function () {\n            // set waited to true\n            waited = true;\n            // resolve with 'foo' string\n            resolve('foo');\n        }, 1000);\n    });\n}\ncy.then(function () {\n    // return a promise to cy.then() that\n    // is awaited until it resolves\n    // @ts-ignore TS7006\n    return waitOneSecond().then(function (str) {\n        expect(str).to.eq('foo');\n        expect(waited).to.be.true;\n    });\n});",
              "err": {},
              "uuid": "2e51580e-71ad-47ae-bc39-5c3f291aedff",
              "parentUUID": "7effbf61-518b-473c-b648-b5ebcd27f1ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70de5d68-aac0-4379-b187-f3b2a1e372ab",
            "39e894b6-8c3b-4aa4-8c42-a6bc7ba6cda1",
            "3cb068a4-08a8-4295-ab6c-2824fb4537cd",
            "4e33b5d8-cf47-4a30-a254-4e052453b6c1",
            "1011ac3c-0378-4fb8-a4c9-8ff256e5dc9a",
            "2e51580e-71ad-47ae-bc39-5c3f291aedff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5425,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "faf158c2-2ffd-4200-a7e4-19a86baa28da",
      "title": "",
      "fullFile": "cypress/integration/examples/viewport.spec.js",
      "file": "cypress/integration/examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75685857-4f39-41cd-a635-1b4b9b84fb20",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 4229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "a23af0c1-39d7-47e5-bb28-15717e5bb9e3",
              "parentUUID": "75685857-4f39-41cd-a635-1b4b9b84fb20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a23af0c1-39d7-47e5-bb28-15717e5bb9e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "01d22813-84b4-4f0e-9482-16d1769160b9",
      "title": "",
      "fullFile": "cypress/integration/examples/waiting.spec.js",
      "file": "cypress/integration/examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ddca1247-f12d-4c88-b466-ee52098a4c21",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 5650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "345c2230-12bb-40fa-a6a8-9c9b76769d5e",
              "parentUUID": "ddca1247-f12d-4c88-b466-ee52098a4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 1585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.server();\n// Listen to GET to comments/1\ncy.route('GET', 'comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('status').should('eq', 200);",
              "err": {},
              "uuid": "6ea3a69c-7a30-46c1-93ff-08a129fd3ab0",
              "parentUUID": "ddca1247-f12d-4c88-b466-ee52098a4c21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "345c2230-12bb-40fa-a6a8-9c9b76769d5e",
            "6ea3a69c-7a30-46c1-93ff-08a129fd3ab0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e9824ee8-af40-4867-a53f-2926aea8a162",
      "title": "",
      "fullFile": "cypress/integration/examples/window.spec.js",
      "file": "cypress/integration/examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f4646b2-ec2e-4ab4-8ac7-c2bd8ab94071",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 1213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "bcd26e2b-be66-435d-a7ef-62b820650cc1",
              "parentUUID": "7f4646b2-ec2e-4ab4-8ac7-c2bd8ab94071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "d3a0e74a-ae39-4b87-b34a-8a29c61e93b0",
              "parentUUID": "7f4646b2-ec2e-4ab4-8ac7-c2bd8ab94071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "a71a0649-c807-4759-be94-0ba406bd005d",
              "parentUUID": "7f4646b2-ec2e-4ab4-8ac7-c2bd8ab94071",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcd26e2b-be66-435d-a7ef-62b820650cc1",
            "d3a0e74a-ae39-4b87-b34a-8a29c61e93b0",
            "a71a0649-c807-4759-be94-0ba406bd005d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1998,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}