{
  "stats": {
    "suites": 11,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2020-04-21T16:03:55.996Z",
    "end": "2020-04-21T16:04:04.669Z",
    "duration": 8673,
    "testsRegistered": 13,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "519e467c-1303-4edd-a239-badafe5e6677",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee41d9a3-996f-4bd7-8f06-f5553639829d",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 1251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n    prevSubject: true,\n}, function (subject, method) {\n    // the previous subject is automatically received\n    // and the commands arguments are shifted\n    // allow us to change the console method used\n    method = method || 'log';\n    // log the subject to the console\n    // @ts-ignore TS7017\n    console[method]('The subject is', subject);\n    // whatever we return becomes the new subject\n    // we don't want to change the subject so\n    // we return whatever was passed in\n    return subject;\n});\n// @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {\n    // subject is still $button\n});",
              "err": {},
              "uuid": "3d31c868-c706-49e9-a833-0cf0aea4577b",
              "parentUUID": "ee41d9a3-996f-4bd7-8f06-f5553639829d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d31c868-c706-49e9-a833-0cf0aea4577b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "6d9d20e8-8f0f-40d6-9d3b-0f743bac069b",
              "parentUUID": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok');\n// preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "58895d8b-5777-42ea-b56b-1b2e5864af88",
              "parentUUID": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n    whitelist: 'session_id',\n});",
              "err": {},
              "uuid": "46ac7dd1-dab3-4ded-9ebc-805b49adbbf9",
              "parentUUID": "3743c271-7efb-40ce-a7f7-3a5bfc7aa00d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d9d20e8-8f0f-40d6-9d3b-0f743bac069b",
            "58895d8b-5777-42ea-b56b-1b2e5864af88",
            "46ac7dd1-dab3-4ded-9ebc-805b49adbbf9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "91f10dd2-3d79-49cf-9948-f1a9cf362d15",
          "title": "Cypress.Server",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".defaults() - change default config of server",
              "fullTitle": "Cypress.Server .defaults() - change default config of server",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Server.defaults({\n    delay: 0,\n    force404: false,\n});",
              "err": {},
              "uuid": "d2509cc5-d092-48f5-932b-5ec9f057b73c",
              "parentUUID": "91f10dd2-3d79-49cf-9948-f1a9cf362d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2509cc5-d092-48f5-932b-5ec9f057b73c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 347,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97fac968-f666-4a49-9d32-a20344d283cb",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "901d237a-400e-4ad1-8dbc-222bce6506f8",
              "parentUUID": "97fac968-f666-4a49-9d32-a20344d283cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "901d237a-400e-4ad1-8dbc-222bce6506f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "484b509e-03ee-4663-b404-7142eb91460d",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 742,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (baseUrl, reporter, ...) } to have property 'baseUrl' of null, but got 'http://localhost:3000/'",
                "estack": "AssertionError: expected { Object (baseUrl, reporter, ...) } to have property 'baseUrl' of null, but got 'http://localhost:3000/'\n    at Context.<anonymous> (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/cypress_api.spec.js-325:92:34)",
                "diff": null
              },
              "uuid": "b4dc50e9-3a77-4218-b6d4-b781d3caef08",
              "parentUUID": "484b509e-03ee-4663-b404-7142eb91460d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b4dc50e9-3a77-4218-b6d4-b781d3caef08"
          ],
          "pending": [],
          "skipped": [],
          "duration": 742,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8836355d-7a31-4f24-86ce-7e0fae009e95",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "a5938e40-4cd6-4549-b9d5-352bf616fc2b",
              "parentUUID": "8836355d-7a31-4f24-86ce-7e0fae009e95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5938e40-4cd6-4549-b9d5-352bf616fc2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 355,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b4c7f6b-c2ad-4ed3-a8bb-80a701f44bc2",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n    host: 'veronica.dev.local',\n    api_server: 'http://localhost:8888/v1/',\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "3b64cf35-48f0-480d-8101-6570ceacaae8",
              "parentUUID": "6b4c7f6b-c2ad-4ed3-a8bb-80a701f44bc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b64cf35-48f0-480d-8101-6570ceacaae8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 508,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "101ed8da-1921-457a-9da8-e24744f900d4",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "de73cf96-edcd-4e69-a008-1c1e8765a9bf",
              "parentUUID": "101ed8da-1921-457a-9da8-e24744f900d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de73cf96-edcd-4e69-a008-1c1e8765a9bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c1968c6-2df1-46d5-a30d-d08e153c9891",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "9ea87f27-f61d-41a2-a42d-f1778391c8d6",
              "parentUUID": "5c1968c6-2df1-46d5-a30d-d08e153c9891",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ea87f27-f61d-41a2-a42d-f1778391c8d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1017a511-86da-4dae-be6f-257649a01fdf",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "549e63a6-46b9-40c6-9213-f9dee128f440",
              "parentUUID": "1017a511-86da-4dae-be6f-257649a01fdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "549e63a6-46b9-40c6-9213-f9dee128f440"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "385148f7-236f-4522-9e8a-760f0c03efb1",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "7cad9885-41dd-42fb-b0f3-88b0f4e371c6",
              "parentUUID": "385148f7-236f-4522-9e8a-760f0c03efb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cad9885-41dd-42fb-b0f3-88b0f4e371c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}